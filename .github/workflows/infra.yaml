name: Terraform Apply/Destroy - Infra

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose Terraform action (apply or destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

env:
  TF_VAR_node_instance_types: '["${{ vars.INSTANCE_TYPE }}"]'
  TF_VAR_cluster_name: "gitops-eks-cluster"
  TF_VAR_bucket: "${{ vars.BUCKET_NAME }}"

jobs:
  terraform_apply:
    runs-on: ubuntu-latest
    if: github.actor == 'danielfarag'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Navigate to terraform/infra
        run: cd terraform/infra

      - name: Create backend.tf
        working-directory: terraform/infra 
        run: |
          cat <<EOF > backend.tf
          terraform {
            backend "s3" {
              bucket  = "${{ vars.BUCKET_NAME }}"
              key = "terraform/state/infra"
              region = "${{ vars.AWS_REGION }}"
            }
          }
          EOF
          cat backend.tf

      - name: Delete mysql-credentials secret
        run: |
          aws secretsmanager delete-secret --secret-id mysql-credentials --force-delete-without-recovery || true 

      - name: Delete redis-credentials secret
        run: |
          aws secretsmanager delete-secret --secret-id redis-credentials --force-delete-without-recovery || true

      - name: Terraform Init
        working-directory: terraform/infra
        run: terraform init

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        working-directory: terraform/infra
        run: terraform apply --auto-approve


      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        working-directory: terraform/infra
        run: terraform destroy --auto-approve
