prometheus:
  service:
    type: ClusterIP
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt"
    hosts:
      - ${prometheus_host}
    paths:
      - /
    tls:
      - secretName: prometheus-tls
        hosts:
          - ${prometheus_host}

grafana:
  adminUser: admin
  adminPassword: password
  service:
    type: ClusterIP
  defaultDashboardsEnabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt"
    hosts:
      - ${grafana_host}
    path: /
    tls:
      - secretName: grafana-tls
        hosts:
          - ${grafana_host}

alertmanager:
  service:
    type: ClusterIP
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt"
    hosts:
      - ${alertmanager_host}
    paths:
      - /
    tls:
      - secretName: alertmanager-tls
        hosts:
          - ${alertmanager_host}